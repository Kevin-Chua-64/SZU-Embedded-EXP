C51 COMPILER V9.02   STEP_MOTOR                                                            12/16/2022 23:19:35 PAGE 1   


C51 COMPILER V9.02, COMPILATION OF MODULE STEP_MOTOR
OBJECT MODULE PLACED IN ..\Obj\step_motor.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE ..\Api\step_motor.c BROWSE INCDIR(..\Api;..\Public;..\User) DEBUG OBJECTEXT
                    -END PRINT(..\Obj\step_motor.lst) OBJECT(..\Obj\step_motor.obj)

line level    source

   1          #include "step_motor.h"
   2          
   3          /*******************************
   4          函数名：step_motor_send_pulse
   5          函数功能：步进电机的节拍运动
   6          函数形参：bit dir
   7          函数返回值：void
   8          备注：dir为0正向A->AB->B->BC->C->CD->D->DA， dir为1反向
   9          *******************************/
  10          void step_motor_send_pulse(bit dir)
  11          {
  12   1              static unsigned char step=1;
  13   1              
  14   1              switch(step)//8个节拍控制：A->AB->B->BC->C->CD->D->DA
  15   1              {
  16   2                      case 1: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=0;break;
  17   2                      case 2: IN1_A=1;IN2_B=1;IN3_C=0;IN4_D=0;break;
  18   2                      case 3: IN1_A=0;IN2_B=1;IN3_C=0;IN4_D=0;break;
  19   2                      case 4: IN1_A=0;IN2_B=1;IN3_C=1;IN4_D=0;break;
  20   2                      case 5: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=0;break;
  21   2                      case 6: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=1;break;
  22   2                      case 7: IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=1;break;
  23   2                      case 8: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=1;break;
  24   2              } delay_10us(80);       
  25   1              if (dir==0)      // 正向
  26   1              {
  27   2                      step++;
  28   2                      if (step==9) step=1;
  29   2              } else
  30   1              {
  31   2                      step--;  // 反向
  32   2                      if (step==0) step=8;
  33   2              }
  34   1      }
  35          
  36          /*******************************
  37          函数名：step_motor_round
  38          函数功能：步进电机的节拍运动
  39          函数形参：u8 speed
  40          函数返回值：void
  41          备注：左右摇头，不算其他代码延时，speed至少80，即800us
  42          *******************************/
  43          void step_motor_round(unsigned char speed)
  44          {
  45   1              static unsigned int step=1;
  46   1              static bit dir=0;
  47   1              
  48   1              switch((step%8)+1)//8个节拍控制：A->AB->B->BC->C->CD->D->DA
  49   1              {
  50   2                      case 1: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=0;break;
  51   2                      case 2: IN1_A=1;IN2_B=1;IN3_C=0;IN4_D=0;break;
  52   2                      case 3: IN1_A=0;IN2_B=1;IN3_C=0;IN4_D=0;break;
  53   2                      case 4: IN1_A=0;IN2_B=1;IN3_C=1;IN4_D=0;break;
  54   2                      case 5: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=0;break;
C51 COMPILER V9.02   STEP_MOTOR                                                            12/16/2022 23:19:35 PAGE 2   

  55   2                      case 6: IN1_A=0;IN2_B=0;IN3_C=1;IN4_D=1;break;
  56   2                      case 7: IN1_A=0;IN2_B=0;IN3_C=0;IN4_D=1;break;
  57   2                      case 8: IN1_A=1;IN2_B=0;IN3_C=0;IN4_D=1;break;
  58   2              } delay_10us(speed);    
  59   1              if (dir==0)      // 正向
  60   1              {
  61   2                      step++;
  62   2                      if (step==2000) {dir=1; delay_10us(80);}
  63   2              } else
  64   1              {
  65   2                      step--;  // 反向
  66   2                      if (step==0) {dir=0; delay_10us(80);}
  67   2              }
  68   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    306    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
